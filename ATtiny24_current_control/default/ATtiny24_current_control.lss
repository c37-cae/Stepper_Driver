
ATtiny24_current_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000074  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000027  00000000  00000000  000000e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000009f  00000000  00000000  0000010f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000006c  00000000  00000000  000001ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000f1  00000000  00000000  0000021a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  0000030c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000bd  00000000  00000000  0000033c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>
  1e:	07 c0       	rjmp	.+14     	; 0x2e <__bad_interrupt>
  20:	06 c0       	rjmp	.+12     	; 0x2e <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf ed       	ldi	r28, 0xDF	; 223
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	0a d0       	rcall	.+20     	; 0x40 <main>
  2c:	21 c0       	rjmp	.+66     	; 0x70 <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <initADC>:
* Pin and Setting Definitions *
******************************/

void initADC()
{
	ADMUX = (1<<REFS1) | //VCC is used as AREF
  30:	80 e8       	ldi	r24, 0x80	; 128
  32:	87 b9       	out	0x07, r24	; 7
			(0<<MUX2) |
			(0<<MUX1) |
			(0<<MUX0);
			
			
	ADCSRA |= (1<<ADEN) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0); 
  34:	86 b1       	in	r24, 0x06	; 6
  36:	81 68       	ori	r24, 0x81	; 129
  38:	86 b9       	out	0x06, r24	; 6
	ADCSRB |= (0<<ADLAR);
  3a:	83 b1       	in	r24, 0x03	; 3
  3c:	83 b9       	out	0x03, r24	; 3

}
  3e:	08 95       	ret

00000040 <main>:
* Pin and Setting Definitions *
******************************/

void initADC()
{
	ADMUX = (1<<REFS1) | //VCC is used as AREF
  40:	80 e8       	ldi	r24, 0x80	; 128
  42:	87 b9       	out	0x07, r24	; 7
			(0<<MUX2) |
			(0<<MUX1) |
			(0<<MUX0);
			
			
	ADCSRA |= (1<<ADEN) | (0<<ADPS2) | (0<<ADPS1) | (1<<ADPS0); 
  44:	86 b1       	in	r24, 0x06	; 6
  46:	81 68       	ori	r24, 0x81	; 129
  48:	86 b9       	out	0x06, r24	; 6
	ADCSRB |= (0<<ADLAR);
  4a:	83 b1       	in	r24, 0x03	; 3
  4c:	83 b9       	out	0x03, r24	; 3


int main(void)
{   
	initADC();
	DDRA = 0b11111110;
  4e:	8e ef       	ldi	r24, 0xFE	; 254
  50:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0b00000000;
  52:	17 ba       	out	0x17, r1	; 23
	PORTA = 0b00000000;
  54:	1b ba       	out	0x1b, r1	; 27
	PORTB = 0b00000000;
  56:	18 ba       	out	0x18, r1	; 24
	
    while(1)
    {
		//PORTA |= 0b00000100;     //Timing Calibration pulse
		//PORTA &= 0b11111011;
		ADCSRA |= (1<<ADSC);
  58:	36 9a       	sbi	0x06, 6	; 6
		while (ADCSRA & (1 <<ADSC));
  5a:	36 99       	sbic	0x06, 6	; 6
  5c:	fe cf       	rjmp	.-4      	; 0x5a <main+0x1a>
		if (ADC > 0b0000000001011110)
  5e:	84 b1       	in	r24, 0x04	; 4
  60:	95 b1       	in	r25, 0x05	; 5
  62:	8f 35       	cpi	r24, 0x5F	; 95
  64:	91 05       	cpc	r25, r1
  66:	10 f0       	brcs	.+4      	; 0x6c <main+0x2c>
		{
			PORTA &= 0b11111101;
  68:	d9 98       	cbi	0x1b, 1	; 27
  6a:	f6 cf       	rjmp	.-20     	; 0x58 <main+0x18>
		}
		else
		{
			PORTA |= 0b00000010;
  6c:	d9 9a       	sbi	0x1b, 1	; 27
  6e:	f4 cf       	rjmp	.-24     	; 0x58 <main+0x18>

00000070 <_exit>:
  70:	f8 94       	cli

00000072 <__stop_program>:
  72:	ff cf       	rjmp	.-2      	; 0x72 <__stop_program>
